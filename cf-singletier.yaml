AWSTemplateFormatVersion: "2010-09-09"
Resources:
  PublicVpc:
    Type: AWS::EC2::VPC 
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Single-tier VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Single-tier Gateway
  
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref PublicVpc
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
      VpcId: !Ref PublicVpc
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1b
      VpcId: !Ref PublicVpc
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PublicVpc

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

# Security Group for EC2 

  SingletierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Single-tier architecture
      GroupName: Single-tier SG
      VpcId: !Ref PublicVpc
      SecurityGroupIngress:
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref ALBSecurityGroup
        
# Instance Launch

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06eecef118bbf9259
      InstanceType: t2.micro
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet1
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref SingletierSecurityGroup     
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo su
            yum update -y
            yum install -y httpd.x86_64
            systemctl start httpd.service
            systemctl enable httpd.service
            echo ?Hello World from $(hostname -f)? > /var/www/html/index.html
      KeyName: webkp

# Create a Load Balancer
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      IpAddressType: ipv4
      Name: DemoLoadBalancer
      Subnets: 
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref ALBSecurityGroup

# ALB Security Group
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security Group for Public Load Balancer
      GroupName: ALB Security Group
      SecurityGroupIngress:
        - FromPort: 80
          ToPort: 80
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0 

        - FromPort: 443
          ToPort: 443
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId: !Ref PublicVpc